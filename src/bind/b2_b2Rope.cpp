/**
 *
 * MACHINE GENERATED FILE. DO NOT EDIT.
 *
 * Bindings for class b2Rope
 *
 * This file has been generated by dub 2.2.0.
 */
#include "dub/dub.h"
#include <Box2D/Rope/b2Rope.h>


/** b2Rope::b2Rope()
 * /media/sundeep/3 tb Vol/code/Clone-game-repo/Clone-game/vendor/Box2D/Box2D/Rope/b2Rope.h:66
 */
static int b2Rope_b2Rope(lua_State *L) {
  try {
    b2Rope *retval__ = new b2Rope();
    dub::pushudata(L, retval__, "b2.b2Rope", true);
    return 1;
  } catch (std::exception &e) {
    lua_pushfstring(L, "new: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "new: Unknown exception");
  }
  return dub::error(L);
}

/** b2Rope::~b2Rope()
 * /media/sundeep/3 tb Vol/code/Clone-game-repo/Clone-game/vendor/Box2D/Box2D/Rope/b2Rope.h:67
 */
static int b2Rope__b2Rope(lua_State *L) {
  try {
    DubUserdata *userdata = ((DubUserdata*)dub::checksdata_d(L, 1, "b2.b2Rope"));
    if (userdata->gc) {
      b2Rope *self = (b2Rope *)userdata->ptr;
      delete self;
    }
    userdata->gc = false;
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "__gc: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "__gc: Unknown exception");
  }
  return dub::error(L);
}

/** void b2Rope::Initialize(const b2RopeDef *def)
 * /media/sundeep/3 tb Vol/code/Clone-game-repo/Clone-game/vendor/Box2D/Box2D/Rope/b2Rope.h:70
 */
static int b2Rope_Initialize(lua_State *L) {
  try {
    b2Rope *self = *((b2Rope **)dub::checksdata(L, 1, "b2.b2Rope"));
    b2RopeDef *def = *((b2RopeDef **)dub::checksdata(L, 2, "b2.b2RopeDef"));
    self->Initialize(def);
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "Initialize: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "Initialize: Unknown exception");
  }
  return dub::error(L);
}

/** void b2Rope::Step(float32 timeStep, int32 iterations)
 * /media/sundeep/3 tb Vol/code/Clone-game-repo/Clone-game/vendor/Box2D/Box2D/Rope/b2Rope.h:73
 */
static int b2Rope_Step(lua_State *L) {
  try {
    b2Rope *self = *((b2Rope **)dub::checksdata(L, 1, "b2.b2Rope"));
    float32 timeStep = dub::checknumber(L, 2);
    int32 iterations = dub::checkint(L, 3);
    self->Step(timeStep, iterations);
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "Step: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "Step: Unknown exception");
  }
  return dub::error(L);
}

/** int32 b2Rope::GetVertexCount() const
 * /media/sundeep/3 tb Vol/code/Clone-game-repo/Clone-game/vendor/Box2D/Box2D/Rope/b2Rope.h:76
 */
static int b2Rope_GetVertexCount(lua_State *L) {
  try {
    b2Rope *self = *((b2Rope **)dub::checksdata(L, 1, "b2.b2Rope"));
    lua_pushnumber(L, self->GetVertexCount());
    return 1;
  } catch (std::exception &e) {
    lua_pushfstring(L, "GetVertexCount: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "GetVertexCount: Unknown exception");
  }
  return dub::error(L);
}

/** const b2Vec2* b2Rope::GetVertices() const
 * /media/sundeep/3 tb Vol/code/Clone-game-repo/Clone-game/vendor/Box2D/Box2D/Rope/b2Rope.h:82
 */
static int b2Rope_GetVertices(lua_State *L) {
  try {
    b2Rope *self = *((b2Rope **)dub::checksdata(L, 1, "b2.b2Rope"));
    const b2Vec2 *retval__ = self->GetVertices();
    if (!retval__) return 0;
    dub::pushudata(L, const_cast<b2Vec2*>(retval__), "b2.b2Vec2", false);
    return 1;
  } catch (std::exception &e) {
    lua_pushfstring(L, "GetVertices: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "GetVertices: Unknown exception");
  }
  return dub::error(L);
}

/** void b2Rope::Draw(b2Draw *draw) const
 * /media/sundeep/3 tb Vol/code/Clone-game-repo/Clone-game/vendor/Box2D/Box2D/Rope/b2Rope.h:88
 */
static int b2Rope_Draw(lua_State *L) {
  try {
    b2Rope *self = *((b2Rope **)dub::checksdata(L, 1, "b2.b2Rope"));
    b2Draw *draw = *((b2Draw **)dub::checksdata(L, 2, "b2.b2Draw"));
    self->Draw(draw);
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "Draw: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "Draw: Unknown exception");
  }
  return dub::error(L);
}

/** void b2Rope::SetAngle(float32 angle)
 * /media/sundeep/3 tb Vol/code/Clone-game-repo/Clone-game/vendor/Box2D/Box2D/Rope/b2Rope.h:91
 */
static int b2Rope_SetAngle(lua_State *L) {
  try {
    b2Rope *self = *((b2Rope **)dub::checksdata(L, 1, "b2.b2Rope"));
    float32 angle = dub::checknumber(L, 2);
    self->SetAngle(angle);
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "SetAngle: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "SetAngle: Unknown exception");
  }
  return dub::error(L);
}



// --=============================================== __tostring
static int b2Rope___tostring(lua_State *L) {
  b2Rope *self = *((b2Rope **)dub::checksdata_n(L, 1, "b2.b2Rope"));
  lua_pushfstring(L, "b2.b2Rope: %p", self);
  
  return 1;
}

// --=============================================== METHODS

static const struct luaL_Reg b2Rope_member_methods[] = {
  { "new"          , b2Rope_b2Rope        },
  { "__gc"         , b2Rope__b2Rope       },
  { "Initialize"   , b2Rope_Initialize    },
  { "Step"         , b2Rope_Step          },
  { "GetVertexCount", b2Rope_GetVertexCount },
  { "GetVertices"  , b2Rope_GetVertices   },
  { "Draw"         , b2Rope_Draw          },
  { "SetAngle"     , b2Rope_SetAngle      },
  { "__tostring"   , b2Rope___tostring    },
  { "deleted"      , dub::isDeleted       },
  { NULL, NULL},
};


extern "C" int luaopen_b2_b2Rope(lua_State *L)
{
  // Create the metatable which will contain all the member methods
  luaL_newmetatable(L, "b2.b2Rope");
  // <mt>

  // register member methods
  dub::fregister(L, b2Rope_member_methods);
  // setup meta-table
  dub::setup(L, "b2.b2Rope");
  // <mt>
  return 1;
}
