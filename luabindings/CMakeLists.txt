#-----------------------------------------------------------------------------
# Load some macros.
SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules;${CMAKE_MODULE_PATH}")
#-----------------------------------------------------------------------------

INCLUDE(${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules/luabind.cmake)

# Force out of source builds.
CHECK_OUT_OF_SOURCE()

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(Luabind CXX C)
SET(LUABIND_VERSION_MAJOR 0)
SET(LUABIND_VERSION_MINOR 9)
SET(LUABIND_VERSION_PATCH 1)
SET(LUABIND_VERSION "${LUABIND_VERSION_MAJOR}.${LUABIND_VERSION_MINOR}.${LUABIND_VERSION_PATCH}")

#-----------------------------------------------------------------------------
# Redirect output files
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH  ${CMAKE_BINARY_DIR}/lib)

IF(WIN32)
  FIND_PACKAGE(External REQUIRED)
ENDIF(WIN32)

#-----------------------------------------------------------------------------
# Set default config options
#
LUABIND_SETUP_DEFAULT_OPTIONS()

#-----------------------------------------------------------------------------
#Platform specifics
FIND_PACKAGE(Threads REQUIRED)
FIND_PACKAGE(Lua51 REQUIRED)
FIND_PACKAGE(Boost REQUIRED)

IF(WIN32)
  INCLUDE(${CMAKE_ROOT}/Modules/Platform/Windows-cl.cmake)
ENDIF(WIN32)

IF(WITH_STLPORT)
  FIND_PACKAGE(STLport REQUIRED)
  INCLUDE_DIRECTORIES(${STLPORT_INCLUDE_DIR})
  IF(WIN32)
    FIND_PACKAGE(WindowsSDK REQUIRED)
    # convert IDE fullpath to include path
    STRING(REGEX REPLACE "Common7/IDE/.+" "VC/include" VC_INCLUDE_DIR ${CMAKE_MAKE_PROGRAM})
    # use VC++ and Windows SDK include paths
    INCLUDE_DIRECTORIES(${VC_INCLUDE_DIR} ${WINSDK_INCLUDE_DIR})
  ENDIF(WIN32)
ENDIF(WITH_STLPORT)

LUABIND_SETUP_BUILD()
LUABIND_SETUP_BUILD_FLAGS()

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/src ${LUA_INCLUDE_DIR} ${Boost_INCLUDE_DIRS})

FILE(GLOB SRC src/*.cpp)
FILE(GLOB HEADERS luabind/*.hpp)
FILE(GLOB HEADERS_DETAIL luabind/detail/*.hpp)

IF(WITH_STLPORT)
  SET(LUABIND_LIBNAME luabind_stlport)
ELSE(WITH_STLPORT)
  SET(LUABIND_LIBNAME luabind)
ENDIF(WITH_STLPORT)

LUABIND_TARGET_LIB(${LUABIND_LIBNAME} ${HEADERS} ${HEADERS_DETAIL} ${SRC})

IF(UNIX)
  TARGET_LINK_LIBRARIES(${LUABIND_LIBNAME} -lc)
ENDIF(UNIX)

TARGET_LINK_LIBRARIES(${LUABIND_LIBNAME} ${CMAKE_THREAD_LIBS_INIT} ${LUA_LIBRARIES})
SET_TARGET_PROPERTIES(${LUABIND_LIBNAME} PROPERTIES LINK_INTERFACE_LIBRARIES "")
LUABIND_DEFAULT_PROPS(${LUABIND_LIBNAME} "Luabind")
LUABIND_ADD_RUNTIME_FLAGS(${LUABIND_LIBNAME})

LUABIND_ADD_LIB_SUFFIX(${LUABIND_LIBNAME})

ADD_DEFINITIONS(${LIBXML2_DEFINITIONS})

IF(UNIX)
  SET(prefix ${CMAKE_INSTALL_PREFIX})
  SET(exec_prefix ${CMAKE_INSTALL_PREFIX}/bin)
  SET(libdir "${CMAKE_INSTALL_PREFIX}/lib")
  SET(includedir "${CMAKE_INSTALL_PREFIX}/include")
  LUABIND_GEN_PC(luabind-stlport.pc)
ENDIF(UNIX)

INSTALL(FILES ${HEADERS} DESTINATION "include/luabind" COMPONENT headers)
INSTALL(FILES ${HEADERS_DETAIL} DESTINATION "include/luabind/detail" COMPONENT headers)
INSTALL(TARGETS ${LUABIND_LIBNAME} LIBRARY DESTINATION lib ARCHIVE DESTINATION lib COMPONENT libraries)

